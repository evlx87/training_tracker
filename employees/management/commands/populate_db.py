from django.core.management.base import BaseCommand
from employees.models import Department, Position

class Command(BaseCommand):
    help = 'Заполняет базу данных предопределенными подразделениями и должностями'

    def handle(self, *args, **kwargs):
        # Список подразделений
        departments = [
            {"name": "Руководство", "description": "Руководство"},
            {"name": "УМО", "description": "Учебно-методический отдел"},
            {"name": "ООПиВР", "description": "Отдел общественно-политической и воспитательной работы"},
            {"name": "ОДО", "description": "Отдел дополнительного образования"},
            {"name": "ОСПР", "description": "Отдел социально-психологической работы"},
            {"name": "ОК", "description": "Отдел кадров"},
            {"name": "ФЭО", "description": "Финансово-экономический отдел"},
            {"name": "ОМТО", "description": "Отдел материально-технического обеспечения"},
            {"name": "ОДОб", "description": "Отдел документационного обеспечения"},
            {"name": "МО", "description": "Медицинский отдел"},
            {"name": "ООБ", "description": "Отдел обеспечения безопасности"},
            {"name": "ОПО", "description": "Отделение правового обеспечения"},
        ]

        # Список должностей
        positions = [
            {"name": "Директор"},
            {"name": "Первый заместитель директора"},
            {"name": "Заместитель директора (по учебно-методической работе)"},
            {"name": "Заместитель директора (по организационным вопросам и контролю)"},
            {"name": "Заместитель директора - руководитель отдела общественно-политической и воспитательной работы"},
            {"name": "Руководитель отдела"},
            {"name": "Заместитель руководителя отдела"},
            {"name": "Инспектор по инновационным технологиям"},
            {"name": "Старший методист"},
            {"name": "Методист"},
            {"name": "Учитель"},
            {"name": "Заместитель руководителя отдела (отделения Санкт-Петербургских кадетских классов и кадетских классов с морской направленностью)"},
            {"name": "Заместитель руководителя отдела (отделение кадетских классов Пансиона воспитанниц)"},
            {"name": "Старший воспитатель"},
            {"name": "Воспитатель"},
            {"name": "Педагог-организатор"},
            {"name": "Педагог дополнительного образования"},
            {"name": "Педагог дополнительного образования (заведующий музеем)"},
            {"name": "Педагог-библиотекарь (заведующий библиотекой)"},
            {"name": "Старший инспектор (психолог)"},
            {"name": "Педагог-психолог"},
            {"name": "Социальный педагог"},
            {"name": "Старший инспектор"},
            {"name": "Инспектор"},
            {"name": "Руководитель отдела (главный бухгалтер)"},
            {"name": "Инженер"},
            {"name": "Техник"},
            {"name": "Водитель автомобиля"},
            {"name": "Начальник отдела (врач-педиатр)"},
            {"name": "Врач-педиатр"},
            {"name": "Медицинская сестра"},
            {"name": "Инспектор (по охране труда)"},
            {"name": "Руководитель отделения"},
        ]

        # Заполнение подразделений
        self.stdout.write("Заполнение подразделений...")
        for dept in departments:
            # Проверяем, существует ли подразделение
            if not Department.objects.filter(name=dept["name"]).exists():
                Department.objects.create(
                    name=dept["name"],
                    description=dept["description"]
                )
                self.stdout.write(self.style.SUCCESS(f'Добавлено подразделение: {dept["name"]}'))
            else:
                self.stdout.write(f'Подразделение "{dept["name"]}" уже существует')

        # Заполнение должностей
        self.stdout.write("\nЗаполнение должностей...")
        for pos in positions:
            # Проверяем, существует ли должность
            if not Position.objects.filter(name=pos["name"]).exists():
                Position.objects.create(name=pos["name"])
                self.stdout.write(self.style.SUCCESS(f'Добавлена должность: {pos["name"]}'))
            else:
                self.stdout.write(f'Должность "{pos["name"]}" уже существует')

        self.stdout.write(self.style.SUCCESS('\nЗаполнение базы данных завершено!'))